-- Should test most constructs in the language currently.
-- Maybe not every possible combination, but the general useage for now.

begin
  -- Different kinds of definitions
  int i, j;
  float f;
  char ch;
  const int N = 10;
  const bool T = true;
  bool array[N] A;

  -- procedure definition
  proc my_proc
    int x;
    x := 30;
    write x + i + -j;  -- can access outside variables
    call my_proc;  -- recursive call is in scope
  end proc;

  -- Assignments
  i, j := 0, 20;
  f := 3.14;
  ch := '%';

  -- Loop and if statements
  while i < N do
    if i % 2 == 0 then
      A[i] := T;
    else if T then
      A[i] := false;
    else if not false then
      skip;
    end if;

    i := i + 1;
    j := j - 1;
  end while;

  -- Test block stmt
  begin
    int inside;
    inside := i;
    write inside;
  end;

  -- Write out some different expressions
  -- Also some operator precendence
  write -j * i , f / 10.0, ch, -(20 * 50);
  write 1 > 2, 10 <= 10, 10 >= 9, 20 ~= 20;
  write not true and not false, true and not false or true;

  call my_proc;
end .
