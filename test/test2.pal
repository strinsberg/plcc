-- Should test most constructs in the language currently.
-- Not every possible combination, but the general useage for now.

begin
  -- Different kinds of definitions
  int i, j;
  float f;
  char ch;
  const int N = 10;
  const bool T = true;
  bool array[N] A;

  -- procedure definition
  proc my_proc
    int x;
    x := 30;
    write x + i + -j, endl;  -- can access outside variables
    if false then
      call my_proc;  -- recursive call is in scope
    end if;
  end proc;

  -- Assignments
  i, j := 0, 20;
  f := 3.14;
  ch := '%';

  -- Loop and if statements
  while i < N do
    if i % 2 == 0 then
      A[i] := T;
    else if T then
      A[i] := false;
    else if not false then
      skip;
    end if;

    i := i + 1;
    j := j - 1;
  end while;

  -- Test block stmt
  begin
    int inside;
    inside := i;
    write inside, endl;
  end;

  -- Write out some different expressions
  -- Also some operator precendence
  write -j * i ," ", f / 10.0," ", ch," ", -(20 * 50), endl;
  write 1 > 2, " ", 10 <= 10, " ", 10 >= 9, " ", 20 ~= 20, endl;
  write not true and not false, " ", true and not false or true, endl;

  call my_proc;
end .
